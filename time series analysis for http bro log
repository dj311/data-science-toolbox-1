import pandas as pd
http_df = pd.read_csv("C:/Users/seeml/Desktop/seurity data analysis/http.log", header=None, sep="\t", 
                      names=['ts', 'uid', 'id.orig_h', 'id.orig_p', 'id.resp_h', 'id.resp_p', 'trans_depth', 'method', 'host', 'uri', 'referrer', 
                             'user_agent', 'request_body_len', 'response_body_len', 'status_code', 'status_msg', 'info_code', 'info_msg', 'filename', 'tags', 
                             'username', 'password', 'proxied', 'orig_fuids', 'orig_mime_types', 'resp_fuids', 'resp_mime_types', 'sample'])
http_df.head()
from datetime import datetime
http_df['ts'] = [datetime.fromtimestamp(float(date)) for date in http_df['ts'].values]
http_df = http_df.set_index('ts')
http_df.head()

import matplotlib.pyplot as plt
plt.rcParams['figure.figsize'] = (16.0, 5.0)

df = http_df[['request_body_len','response_body_len']]
df.plot()

resamp = df.resample("M", how=['mean', 'count', 'sum'])
resamp.plot(subplots=True)
resamp.plot()


# autocorrelation plot (acf)
from pandas.tools.plotting import autocorrelation_plot
from matplotlib import pyplot


autocorrelation_plot(resamp['response_body_len']['sum'])
#we can get q=2 
# pacf partial autocorrelation func
from statsmodels.graphics.tsaplots import plot_pacf
plot_pacf(resamp['response_body_len']['sum']) 
#too many value >1 or <-1, i don't think it is ar model.


# MA 
from statsmodels.tsa.arima_model import ARMA
# fit model
model = ARMA(resamp['response_body_len']['sum'], order=(0, 2))
model_fit = model.fit(disp=False)
# make prediction
yhat = model_fit.predict(len(resamp['response_body_len']['sum']), len(resamp['response_body_len']['sum']))
print(yhat)
